package trcformatter.GUI;

import java.awt.Cursor;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import trcformatter.Persistance.DAO.QueriesDAO;
import trcformatter.model.QueryInfoBean;
import trcformatter.model.staticData.StaticData;
import trcformatter.utilities.filter.QueryFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ESA10969
 */
public class QueriesTable extends javax.swing.JFrame {
  private static final long serialVersionUID = 1L;

    /**
     * Creates new form QueriesTable
     */
    public QueriesTable() {
        initComponents();
        ImageIcon ii = new ImageIcon(this.getClass().getResource("img/save.png"));
        saveButton.setIcon(ii);
        setTitle("TrcFormatter V1.0");
        this.setLocationRelativeTo(null);
        loadTable("ALL");
    }
    
    public final void loadTable(String depVal) {
        //Variable definition
        DefaultTableModel model = (DefaultTableModel) qryTable.getModel();
        String rlbk       = rlbkCombo.getSelectedItem() != null &&  !rlbkCombo.getSelectedItem().toString().equals("")
                            ? rlbkCombo.getSelectedItem().toString() : "";
        String rdOnly     = rdOnlyCmb.getSelectedItem() != null && !rdOnlyCmb.getSelectedItem().toString().equals("")
                            ? rdOnlyCmb.getSelectedItem().toString() : "";
        String table      = qryTableTxt.getText() != null ? qryTableTxt.getText() : "";
        boolean tableFull = tblAccFllChk.isSelected();
        
        while(model.getRowCount() > 0) {
          model.removeRow(0);
        }
        
        if (depVal.equals("ALL")) {
          QueryFilter.allDepFilter(model, sqlID.getText(), rlbk, rdOnly, table, tableFull);
        } else {
          QueryFilter.byDepFilter(model, depVal, sqlID.getText(), rlbk, rdOnly, table, tableFull);
        }
        qryTable.setModel(model);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jButton1 = new javax.swing.JButton();
    depCombo = new javax.swing.JComboBox();
    jScrollPane1 = new javax.swing.JScrollPane();
    qryTable = new javax.swing.JTable();
    jLabel1 = new javax.swing.JLabel();
    filterButton = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    detailButton = new javax.swing.JButton();
    loadFile = new javax.swing.JButton();
    jLabel3 = new javax.swing.JLabel();
    sqlID = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    rlbkCombo = new javax.swing.JComboBox();
    jLabel5 = new javax.swing.JLabel();
    rdOnlyCmb = new javax.swing.JComboBox();
    jLabel6 = new javax.swing.JLabel();
    qryTableTxt = new javax.swing.JTextField();
    tblAccFllChk = new javax.swing.JCheckBox();
    saveButton = new javax.swing.JButton();

    jButton1.setText("jButton1");

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    depCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "0", "1", "2" }));

    qryTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null}
      },
      new String [] {
        "DEP", "Query", "Exe Time", "SQL ID"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
      };
      boolean[] canEdit = new boolean [] {
        false, false, false, true
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    jScrollPane1.setViewportView(qryTable);

    jLabel1.setText("DEP Value Filter");

    filterButton.setText("filterButton");
    filterButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        filterButtonMouseClicked(evt);
      }
    });

    jLabel2.setText("VIEW SELECTED DETAIL");

    detailButton.setText("Detail");
    detailButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        detailButtonMouseClicked(evt);
      }
    });

    loadFile.setText("Load Other File");
    loadFile.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        loadFileMouseClicked(evt);
      }
    });

    jLabel3.setText("SQL ID");

    jLabel4.setText("RollBack");

    rlbkCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "" }));
    rlbkCombo.setSelectedIndex(2);

    jLabel5.setText("ReadOnly");

    rdOnlyCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "" }));
    rdOnlyCmb.setSelectedIndex(2);

    jLabel6.setText("Query Table");

    tblAccFllChk.setText("Table Access Full");

    saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        saveButtonMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(saveButton)
            .addGap(187, 187, 187)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(detailButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(loadFile)))
        .addContainerGap())
      .addGroup(layout.createSequentialGroup()
        .addGap(119, 119, 119)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
            .addGroup(layout.createSequentialGroup()
              .addComponent(jLabel3)
              .addGap(18, 18, 18)
              .addComponent(sqlID, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGap(18, 18, 18)
              .addComponent(jLabel6)
              .addGap(18, 18, 18)
              .addComponent(qryTableTxt))
            .addGroup(layout.createSequentialGroup()
              .addComponent(jLabel1)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(depCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGap(18, 18, 18)
              .addComponent(jLabel4)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(rlbkCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGap(18, 18, 18)
              .addComponent(jLabel5)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(rdOnlyCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addGroup(layout.createSequentialGroup()
            .addGap(128, 128, 128)
            .addComponent(tblAccFllChk)))
        .addGap(18, 18, 18)
        .addComponent(filterButton)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(9, 9, 9)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(sqlID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel3)
              .addComponent(qryTableTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel6))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel4)
              .addComponent(rlbkCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel5)
              .addComponent(rdOnlyCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel1)
              .addComponent(depCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tblAccFllChk)
            .addGap(18, 18, 18))
          .addGroup(layout.createSequentialGroup()
            .addGap(23, 23, 23)
            .addComponent(filterButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(detailButton)
          .addComponent(saveButton)
          .addComponent(loadFile))
        .addGap(20, 20, 20))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void filterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterButtonMouseClicked
        loadTable(depCombo.getSelectedItem().toString());
    }//GEN-LAST:event_filterButtonMouseClicked

    private void detailButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailButtonMouseClicked
        //Variable definition
        String sqlId;
        int rowNum;
        DefaultTableModel model = (DefaultTableModel) qryTable.getModel();
        
        rowNum = qryTable.getSelectedRow();
        sqlId  = "sqlid='" + model.getValueAt(rowNum, 3).toString() + "'";
        
        for(QueryInfoBean qryInfo : StaticData.qryInfoLst) {
            if(qryInfo.getSqlId().equals(sqlId)) {
                StaticData.detInfo = qryInfo;
                break;
            }
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Detail().setVisible(true);
            }
        });
    }//GEN-LAST:event_detailButtonMouseClicked

    private void loadFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadFileMouseClicked
        // Variable definition
        
        StaticData.qryInfoLst.clear();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LoadFile().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_loadFileMouseClicked

  private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
    // Variable definition
    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    Thread th = new Thread(new QueriesDAO("INSERT", StaticData.qryInfoLst, this, null));
    
    th.start();
    
  }//GEN-LAST:event_saveButtonMouseClicked

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox depCombo;
  private javax.swing.JButton detailButton;
  private javax.swing.JButton filterButton;
  private javax.swing.JButton jButton1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton loadFile;
  private javax.swing.JTable qryTable;
  private javax.swing.JTextField qryTableTxt;
  private javax.swing.JComboBox rdOnlyCmb;
  private javax.swing.JComboBox rlbkCombo;
  private javax.swing.JButton saveButton;
  private javax.swing.JTextField sqlID;
  private javax.swing.JCheckBox tblAccFllChk;
  // End of variables declaration//GEN-END:variables
}
